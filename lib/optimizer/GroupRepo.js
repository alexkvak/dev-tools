// Generated by CoffeeScript 1.6.3
var GroupRepo, OptimizerGroup;

OptimizerGroup = (function() {
  /*
  Simply little abstraction of module optimization group
  */

  OptimizerGroup.prototype._items = null;

  OptimizerGroup.prototype._modules = null;

  OptimizerGroup.prototype._subGroups = null;

  function OptimizerGroup(repo, id, items) {
    var group, item, _i, _len;
    this.repo = repo;
    this.id = id;
    /*
    @param OptimizerGroupRepo repo group repository (creator)
    @param String id group unique id
    @param Array[String] items list of modules and/or sub-group ids which belongs to this new group
    */

    this._items = items;
    this._modules = [];
    this._subGroups = [];
    for (_i = 0, _len = items.length; _i < _len; _i++) {
      item = items[_i];
      if (group = repo.getGroup(item)) {
        this._subGroups.push(group);
        this._modules = this._modules.concat(group.getModules());
      } else {
        this._modules.push(item);
      }
    }
  }

  OptimizerGroup.prototype.getItems = function() {
    return this._items;
  };

  OptimizerGroup.prototype.getModules = function() {
    return this._modules;
  };

  return OptimizerGroup;

})();

GroupRepo = (function() {
  function GroupRepo() {}

  /*
  Global repository of optimization groups.
  Creates groups and contains key-value list of OptimizationGroup by their IDs.
  */


  GroupRepo.prototype._groups = {};

  GroupRepo.prototype.createGroup = function(groupId, modules) {
    return this._groups[groupId] = new OptimizerGroup(this, groupId, modules);
  };

  GroupRepo.prototype.getGroup = function(groupId) {
    return this._groups[groupId];
  };

  return GroupRepo;

})();

module.exports = GroupRepo;
