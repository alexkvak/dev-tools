// Generated by CoffeeScript 1.6.3
var ByWidgetGroupDetector, path, sha1, _;

path = require('path');

_ = require('underscore');

sha1 = require('../utils/sha1');

ByWidgetGroupDetector = (function() {
  /*
  Groups all widget's js files together.
  */

  function ByWidgetGroupDetector(groupRepo) {
    this.groupRepo = groupRepo;
  }

  ByWidgetGroupDetector.prototype.process = function(stat) {
    var gr, group, items, key, lengthBefore, module, moduleList, modules, optimizedStat, page, resultGroups, widgetGroups, widgetsRe, _i, _j, _len, _len1;
    widgetGroups = {};
    widgetsRe = /^bundles\/.+\/widgets\//;
    for (page in stat) {
      modules = stat[page];
      for (_i = 0, _len = modules.length; _i < _len; _i++) {
        module = modules[_i];
        if (widgetsRe.test(module)) {
          key = path.dirname(module);
          if (widgetGroups[key] == null) {
            widgetGroups[key] = [];
          }
          if (widgetGroups[key].indexOf(module) === -1) {
            widgetGroups[key].push(module);
          }
        }
      }
    }
    resultGroups = [];
    for (gr in widgetGroups) {
      items = widgetGroups[gr];
      if (items.length > 1) {
        resultGroups.push(this.groupRepo.createGroup(this._generateGroupId(items, gr), items));
      }
    }
    optimizedStat = {};
    for (page in stat) {
      moduleList = stat[page];
      modules = _.clone(moduleList);
      for (_j = 0, _len1 = resultGroups.length; _j < _len1; _j++) {
        group = resultGroups[_j];
        lengthBefore = modules.length;
        modules = _.difference(modules, group.getItems());
        if (lengthBefore > modules.length) {
          modules.push(group.id);
        }
      }
      optimizedStat[page] = modules;
    }
    return optimizedStat;
  };

  ByWidgetGroupDetector.prototype._generateGroupId = function(items, groupDir) {
    var itemsStr;
    itemsStr = items.sort().join();
    return 'group-widget-' + sha1(itemsStr) + '-' + items.length + '-' + groupDir.substr(-12);
  };

  return ByWidgetGroupDetector;

})();

module.exports = ByWidgetGroupDetector;
