// Generated by CoffeeScript 1.6.3
var EventEmitter, Future, ProjectBuilder, buildManager, walk,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

walk = require('walk');

EventEmitter = require('events').EventEmitter;

Future = require('../utils/Future').Future;

buildManager = require('./BuildManager').buildManager;

ProjectBuilder = (function(_super) {
  __extends(ProjectBuilder, _super);

  function ProjectBuilder(params) {
    this.params = params;
    console.log("build params", this.params);
  }

  ProjectBuilder.prototype.build = function() {
    var completePromise, dir, dirList, relativePos, start, _fn, _i, _len,
      _this = this;
    console.log("building project...");
    start = process.hrtime();
    completePromise = new Future;
    relativePos = this.params.baseDir.length + 1;
    dirList = [this.params.baseDir + '/public/app', this.params.baseDir + '/public/bundles', this.params.baseDir + '/public/vendor'];
    _fn = function(dir) {
      var walker;
      completePromise.fork();
      walker = walk.walk(dir);
      walker.on('file', function(root, stat, next) {
        var relativeDir;
        if (root.indexOf('.git') < 0 && stat.name.indexOf('.git') < 0 && root.indexOf('.hg') < 0 && stat.name.indexOf('.hg') < 0) {
          relativeDir = root.substr(relativePos);
          completePromise.when(buildManager.createTask("" + relativeDir + "/" + stat.name, _this.params.baseDir, _this.params.targetDir));
        }
        return next();
      });
      return walker.on('end', function() {
        console.log("walker for dir " + dir + " completed!");
        return completePromise.resolve();
      });
    };
    for (_i = 0, _len = dirList.length; _i < _len; _i++) {
      dir = dirList[_i];
      _fn(dir);
    }
    completePromise.done(function() {
      var diff;
      diff = process.hrtime(start);
      return console.log("Build complete in " + ((diff[0] * 1e9 + diff[1]) / 1e6) + " ms");
    });
    return this;
  };

  return ProjectBuilder;

})(EventEmitter);

exports.ProjectBuilder = ProjectBuilder;
