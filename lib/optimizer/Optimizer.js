// Generated by CoffeeScript 1.6.3
var CssOptimizer, Future, JsOptimizer, Optimizer, browserInitGenerator, fs, mkdirp, requirejsConfig, rmrf, sha1, _;

fs = require('fs');

_ = require('underscore');

mkdirp = require('mkdirp');

Future = require('../utils/Future');

rmrf = require('../utils/rmrf');

sha1 = require('../utils/sha1');

browserInitGenerator = require('./browserInitGenerator');

CssOptimizer = require('./CssOptimizer');

JsOptimizer = require('./JsOptimizer');

requirejsConfig = require('./requirejsConfig');

Optimizer = (function() {
  /*
  Build optimizer.
  * grouping modules into single files
  * minifying, gzipping
  * and so on
  */

  Optimizer.prototype._zDir = null;

  Optimizer.prototype._requireConfig = null;

  Optimizer.prototype._cleanFuture = null;

  function Optimizer(params) {
    this.params = params;
    this._zDir = "" + this.params.targetDir + "/public/assets/z";
  }

  Optimizer.prototype.run = function() {
    var cssOptimizerFuture, jsOptimizer, start, zDirFuture,
      _this = this;
    start = process.hrtime();
    zDirFuture = (this.params.clean ? rmrf(this._zDir) : Future.resolved()).flatMap(function() {
      return Future.call(mkdirp, _this._zDir);
    });
    jsOptimizer = new JsOptimizer(this.params, zDirFuture);
    cssOptimizerFuture = this.params.css ? (new CssOptimizer(this.params, zDirFuture)).run() : Future.call(fs.unlink, "" + this.params.targetDir + "/conf/css-to-group-generated.js").map(function() {
      return {};
    }).mapFail(function() {
      return {};
    });
    return jsOptimizer.run().zip(cssOptimizerFuture).flatMap(function(jsGroupMap, cssGroupMap) {
      console.log("Generating browser-init script...");
      return browserInitGenerator.generate(_this.params, jsGroupMap, cssGroupMap);
    }).flatMap(function(browserInitScriptString) {
      var fileName;
      fileName = sha1(browserInitScriptString);
      return Future.call(fs.writeFile, "" + _this._zDir + "/" + fileName + ".js", browserInitScriptString).zip(Future.call(fs.writeFile, "" + _this._zDir + "/browser-init.id", fileName));
    }).failAloud().done(function() {
      var diff;
      diff = process.hrtime(start);
      return console.log("Optimization complete in " + ((diff[0] * 1e9 + diff[1]) / 1e6) + " ms");
    });
  };

  return Optimizer;

})();

module.exports = Optimizer;
